{"version":3,"sources":["webpack:///./src/pages/account.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Home","MyAccount","Settings","Billing","Account","isAuthenticated","login","user","getProfile","to","href","onClick","e","logout","preventDefault","JSON","stringify","path","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"2FAAA,oEAKMA,EAAO,kBAAM,oCACbC,EAAY,kBAAM,0CAClBC,EAAW,kBAAM,wCACjBC,EAAU,kBAAM,uCAsCPC,UApCC,WACd,IAAKC,cAEH,OADAC,cACO,sDAGT,IAAMC,EAAOC,cAEb,OACE,oCACE,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,QAAyB,IACzB,kBAAC,IAAD,CAAMA,GAAG,aAAT,cAAuC,IACvC,kBAAC,IAAD,CAAMA,GAAG,sBAAT,YAA8C,IAC9C,kBAAC,IAAD,CAAMA,GAAG,qBAAT,WAA4C,IAC5C,uBACEC,KAAK,UACLC,QAAS,SAAAC,GACPC,cACAD,EAAEE,mBAJN,YAUF,6BAAMC,KAAKC,UAAUT,EAAM,KAAM,IACjC,kBAAC,SAAD,KACE,kBAACP,EAAD,CAAMiB,KAAK,MACX,kBAAChB,EAAD,CAAWgB,KAAK,cAChB,kBAACf,EAAD,CAAUe,KAAK,sBACf,kBAACd,EAAD,CAASc,KAAK,yB,kCCxCtB,sGAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-account-js-429970a351d6dd04f7b8.js","sourcesContent":["import React from \"react\"\nimport { Router } from \"@reach/router\"\nimport { login, logout, isAuthenticated, getProfile } from \"../utils/auth\"\nimport { Link } from \"gatsby\"\n\nconst Home = () => <p>Home</p>\nconst MyAccount = () => <p>My Account</p>\nconst Settings = () => <p>Settings</p>\nconst Billing = () => <p>Billing</p>\n\nconst Account = () => {\n  if (!isAuthenticated()) {\n    login()\n    return <p>Redirecting to login...</p>\n  }\n\n  const user = getProfile()\n\n  return (\n    <>\n      <nav>\n        <Link to=\"/\">Home</Link>{\" \"}\n        <Link to=\"/account/\">My Account</Link>{\" \"}\n        <Link to=\"/account/settings/\">Settings</Link>{\" \"}\n        <Link to=\"/account/billing/\">Billing</Link>{\" \"}\n        <a\n          href=\"#logout\"\n          onClick={e => {\n            logout()\n            e.preventDefault()\n          }}\n        >\n          Log Out\n        </a>\n      </nav>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n      <Router>\n        <Home path=\"/\" />\n        <MyAccount path=\"/account/\" />\n        <Settings path=\"/account/settings\" />\n        <Billing path=\"/account/billing\" />\n      </Router>\n    </>\n  )\n}\n\nexport default Account\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}